[{"__symbolic":"module","version":4,"metadata":{"RemoteDesktopComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ngx-remote-desktop","template":"\n        <main class=\"ngx-remote-desktop\" #container>\n            <nav class=\"ngx-remote-desktop-toolbar\" \n                [class.ngx-remote-desktop-toolbar-fullscreen]=\"isFullScreen\" \n                    [@fadeInOut]=\"toolbarVisible\">\n                <ul class=\"ngx-remote-desktop-toolbar-items\">\n                    <ng-content select='ngx-remote-desktop-toolbar-item[align=left]'></ng-content>\n                </ul>\n                <ul class=\"ngx-remote-desktop-toolbar-items\">\n                    <ng-content select='ngx-remote-desktop-toolbar-item[align=right]'></ng-content>\n                    <ngx-remote-desktop-toolbar-item (click)=\"handleFullScreen()\" *ngIf=\"!isFullScreen\" \n                        [hidden]=\"!isState('CONNECTED')\">\n                        <i class=\"fa fa-arrows-alt\"> </i> {{ messages.enterFullScreen }}\n                    </ngx-remote-desktop-toolbar-item>\n                    <ngx-remote-desktop-toolbar-item (click)=\"handleFullScreen()\" *ngIf=\"isFullScreen\" \n                        [hidden]=\"!isState('CONNECTED')\">\n                        <i class=\"fa fa-arrows-alt\"> </i> {{ messages.exitFullScreen }}\n                    </ngx-remote-desktop-toolbar-item>\n                </ul>\n            </nav>\n            <section class=\"ngx-remote-desktop-container\">\n                <ngx-remote-desktop-message *ngIf=\"isState(states.CONNECTING)\"\n                    [title]=\"messages.state.connecting.title\"\n                    [message]=\"messages.state.connecting.message\"\n                    type=\"success\">\n                </ngx-remote-desktop-message>\n\n                <ngx-remote-desktop-message *ngIf=\"isState(states.ERROR)\"\n                    [title]=\"messages.state.error.title\"\n                    [message]=\"messages.state.error.message\"\n                    type=\"error\">\n                    <button (click)=\"handleConnect()\" class=\"ngx-remote-desktop-message-body-btn\">\n                        {{ messages.state.error.connect }}\n                    </button>\n                </ngx-remote-desktop-message>\n\n                <ngx-remote-desktop-message *ngIf=\"isState(states.DISCONNECTED)\"\n                    [title]=\"messages.state.disconnected.title\"\n                    [message]=\"messages.state.disconnected.message\"\n                    type=\"error\">\n                    <button (click)=\"handleConnect()\" class=\"ngx-remote-desktop-message-body-btn\">\n                        {{ messages.state.disconnected.reconnect }}\n                    </button>\n                </ngx-remote-desktop-message>\n\n                <ngx-remote-desktop-display *ngIf=\"isState(states.CONNECTED)\" \n                    [manager]=\"manager\"\n                    [isFullScreen]=\"isFullScreen\"\n                    [isFocused]=\"manager.isFocused\"\n                    (onMouseMove)=\"handleDisplayMouseMove($event)\">\n                </ngx-remote-desktop-display>                \n            </section>\n        </main>\n    ","encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"},"animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger"},"arguments":["fadeInOut",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state"},"arguments":["1",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style"},"arguments":[{"display":"visible"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state"},"arguments":["0",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style"},"arguments":[{"opacity":0,"display":"none"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition"},"arguments":["1 => 0",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate"},"arguments":["1000ms"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition"},"arguments":["0 => 1",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate"},"arguments":["0ms"]}]}]]}]}]}],"members":{"manager":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"messages":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"container":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["container"]}]}],"ngOnInit":[{"__symbolic":"method"}],"setState":[{"__symbolic":"method"}],"handleConnect":[{"__symbolic":"method"}],"isState":[{"__symbolic":"method"}],"handleState":[{"__symbolic":"method"}],"exitFullScreen":[{"__symbolic":"method"}],"handleFullScreen":[{"__symbolic":"method"}],"handleToolbar":[{"__symbolic":"method"}],"handleDisplayMouseMove":[{"__symbolic":"method"}],"showOrHideToolbar":[{"__symbolic":"method"}]}}}}]